version: "3.8"

services:
  primary-backend:
    image: akashxdev/blinkflow-primary-backend:v1
    container_name: blinkflow-primary-backend
    ports:
      - "8080:8080"
    environment:
      FRONTEND_REDIRECT_URL: ${FRONTEND_REDIRECT_URL}
      FRONTEND_URL: ${FRONTEND_URL}
      DB_URL: ${DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      ZOHO_USERNAME: ${ZOHO_USERNAME}
      ZOHO_PASSWORD: ${ZOHO_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - blinkflow-network

  flowrun-listener:
    image: akashxdev/blinkflow-flowrun-listener:v1
    container_name: blinkflow-flowrun-listener
    ports:
      - "8081:8081"
    environment:
      DB_URL: ${DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - blinkflow-network

  flowrun-producer:
    image: akashxdev/blinkflow-flowrun-producer:v1
    container_name: blinkflow-flowrun-producer
    ports:
      - "8082:8082"
    environment:
      DB_URL: ${DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      KAFKA_TX_ID: ${KAFKA_TX_ID}
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - blinkflow-network

  flowrun-executor:
    image: akashxdev/blinkflow-flowrun-executor:v1
    container_name: blinkflow-flowrun-executor
    ports:
      - "8083:8083"
    environment:
      DB_URL: ${DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      KAFKA_TX_ID: ${KAFKA_TX_ID}
      KAFKA_GROUP_ID: ${KAFKA_GROUP_ID}
      ZOHO_USERNAME: ${ZOHO_USERNAME}
      ZOHO_PASSWORD: ${ZOHO_PASSWORD}
      GROQ_API_KEY: ${GROQ_API_KEY}
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - blinkflow-network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_NUM_PARTITIONS=1
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
      - KAFKA_ENABLE_KRAFT=yes
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - blinkflow-network

volumes:
  kafka_data:

networks:
  blinkflow-network:
    driver: bridge
